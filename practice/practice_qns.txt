1. Requests and limits
------------------------
> Create an nginx pod with requests cpu=100m,memory=256Mi and limits cpu=200m,memory=512Mi

Hint: kubectl run --help

kubectl run nginx --image=nginx --restart=Never --requests='cpu=100m,memory=256Mi' --limits='cpu=200m,memory=512Mi'



2. ServiceAccounts
------------------------
> See all the service accounts of the cluster in all namespaces

kubectl get sa --all-namespaces

> Create a new serviceaccount called 'myuser'

kubectl create sa myuser


> Create an nginx pod that uses 'myuser' as a service account

kubectl run nginx --image=nginx --restart=Never -o yaml --dry-run=client > pod.yaml
vi pod.yaml

apiVersion: v1
kind: Pod
metadata:
  labels:
    run: nginx
  name: nginx
spec:
  serviceAccountName: myuser # we use pod.spec.serviceAccountName
  containers:
  - image: nginx
    imagePullPolicy: IfNotPresent
    name: nginx
    resources: {}
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  
  

Taint & Tolerations
-------------------------------------------------------------------------
> kubectl describe node minikube

> kubectl taint nodes minikube spray=mortein:NoSchedule

> kubectl run --image=busybox --restart=Never

> kubectl get po

> kubectl run  and busybox-bee --image=busybox --restart=Never --dry-run=client -o yaml > pod.yaml

apiVersion: v1
kind: Pod
metadata:
  labels:
    run: busybox-bee
  name: busybox-bee
spec:
  containers:
  - image: busybox
    name: busybox-bee
  tolerations:
  - key: spray
    operator: Equal
    value: mortein
    effect: NoSchedule
  dnsPolicy: ClusterFirst
  restartPolicy: Never
  
  
